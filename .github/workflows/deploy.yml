name: Deploy Infrastructure

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # Allow manual triggers

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-session-name: GitHubActions-${{ github.run_id }}
        aws-region: eu-north-1
        audience: sts.amazonaws.com
    
    - name: Verify AWS connection
      run: |
        echo "Connected as:"
        aws sts get-caller-identity
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Package Lambda function
      run: |
        # Create a temporary directory for Lambda package
        mkdir -p lambda-package
        
        # Copy Lambda function code
        cp lambda/lambda_function.py lambda-package/
        
        # Install dependencies to target directory
        uv pip install --target lambda-package boto3 psycopg2-binary
        
        # Create deployment zip
        cd lambda-package
        zip -r ../lambda-deployment.zip .
        cd ..
        
        echo "Lambda package created: $(ls -lh lambda-deployment.zip)"
        echo "Package contents (first 20 files):"
        unzip -l lambda-deployment.zip | head -20
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: latest
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
    
    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate
    
    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -out=tfplan
    
    - name: Terraform Plan Output
      run: |
        cd terraform
        echo "=== Terraform Plan Results ==="
        terraform show tfplan
        echo "=============================="
    
    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve tfplan
    
    - name: Output Infrastructure Info
      run: |
        cd terraform
        echo "=== Infrastructure Deployed ==="
        terraform output
        echo "================================"
